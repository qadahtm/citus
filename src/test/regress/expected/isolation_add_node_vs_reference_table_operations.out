Parsed test spec with 2 sessions

starting permutation: s2-load-metadata-cache s1-begin s1-add-second-worker s2-copy-to-reference-table s1-commit s2-print-content
step s2-load-metadata-cache: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s1-begin: 
    BEGIN;

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);

nodename       nodeport       isactive       

localhost      57638          t              
step s2-copy-to-reference-table: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-copy-to-reference-table: <... completed>
step s2-print-content: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              10             
57638          t              10             

starting permutation: s2-load-metadata-cache s2-begin s2-copy-to-reference-table s1-add-second-worker s2-commit s2-print-content
step s2-load-metadata-cache: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s2-begin: 
	BEGIN;

step s2-copy-to-reference-table: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-add-second-worker: <... completed>
nodename       nodeport       isactive       

localhost      57638          t              
step s2-print-content: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              10             
57638          t              10             

starting permutation: s2-load-metadata-cache s1-begin s1-add-second-worker s2-insert-to-reference-table s1-commit s2-print-content
step s2-load-metadata-cache: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s1-begin: 
    BEGIN;

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);

nodename       nodeport       isactive       

localhost      57638          t              
step s2-insert-to-reference-table: 
	INSERT INTO test_reference_table VALUES (6);
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-insert-to-reference-table: <... completed>
step s2-print-content: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              6              
57638          t              6              

starting permutation: s2-load-metadata-cache s2-begin s2-insert-to-reference-table s1-add-second-worker s2-commit s2-print-content
step s2-load-metadata-cache: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s2-begin: 
	BEGIN;

step s2-insert-to-reference-table: 
	INSERT INTO test_reference_table VALUES (6);

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-add-second-worker: <... completed>
nodename       nodeport       isactive       

localhost      57638          t              
step s2-print-content: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              6              
57638          t              6              

starting permutation: s2-load-metadata-cache s1-begin s1-add-second-worker s2-ddl-on-reference-table s1-commit s2-print-index-count
step s2-load-metadata-cache: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s1-begin: 
    BEGIN;

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);

nodename       nodeport       isactive       

localhost      57638          t              
step s2-ddl-on-reference-table: 
	CREATE INDEX reference_index ON test_reference_table(test_id);
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-ddl-on-reference-table: <... completed>
step s2-print-index-count: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from pg_indexes WHERE tablename = ''%s''')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              1              
57638          t              1              

starting permutation: s2-load-metadata-cache s2-begin s2-ddl-on-reference-table s1-add-second-worker s2-commit s2-print-index-count
step s2-load-metadata-cache: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s2-begin: 
	BEGIN;

step s2-ddl-on-reference-table: 
	CREATE INDEX reference_index ON test_reference_table(test_id);

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-add-second-worker: <... completed>
nodename       nodeport       isactive       

localhost      57638          t              
step s2-print-index-count: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from pg_indexes WHERE tablename = ''%s''')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              1              
57638          t              1              

starting permutation: s2-load-metadata-cache s2-begin s1-add-second-worker s2-create-reference-table-2 s2-select-join-reference-table-2 s2-commit s2-print-content-2 s2-drop-reference-table-2
step s2-load-metadata-cache: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s2-begin: 
	BEGIN;

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);

nodename       nodeport       isactive       

localhost      57638          t              
step s2-create-reference-table-2: 
	CREATE TABLE test_reference_table_2 (test_id integer);
	SELECT create_reference_table('test_reference_table_2');

create_reference_table

               
step s2-select-join-reference-table-2: 
	CREATE TABLE test_table (x int, y int);
	SELECT create_distributed_table('test_table','x');
	SELECT * FROM test_table JOIN test_reference_table_2 ON test_id = x;
	DROP TABLE test_table;

create_distributed_table

               
ERROR:  cannot perform query with placements that were modified over multiple connections
step s2-commit: 
	COMMIT;

step s2-print-content-2: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              5              
57638          t              5              
step s2-drop-reference-table-2: 
	DROP TABLE test_reference_table_2;

ERROR:  table "test_reference_table_2" does not exist

starting permutation: s2-load-metadata-cache s2-begin s2-create-reference-table-2 s1-add-second-worker s2-select-join-reference-table-2 s2-commit s2-print-content-2 s2-drop-reference-table-2
step s2-load-metadata-cache: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s2-begin: 
	BEGIN;

step s2-create-reference-table-2: 
	CREATE TABLE test_reference_table_2 (test_id integer);
	SELECT create_reference_table('test_reference_table_2');

create_reference_table

               
step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-select-join-reference-table-2: 
	CREATE TABLE test_table (x int, y int);
	SELECT create_distributed_table('test_table','x');
	SELECT * FROM test_table JOIN test_reference_table_2 ON test_id = x;
	DROP TABLE test_table;

step s1-add-second-worker: <... completed>
nodename       nodeport       isactive       

localhost      57638          t              
error in steps s2-select-join-reference-table-2 s1-add-second-worker: ERROR:  replication_factor (2) exceeds number of worker nodes (1)
step s2-commit: 
	COMMIT;

step s2-print-content-2: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              5              
57638          t              5              
step s2-drop-reference-table-2: 
	DROP TABLE test_reference_table_2;

ERROR:  table "test_reference_table_2" does not exist

starting permutation: s1-begin s1-add-second-worker s2-copy-to-reference-table s1-commit s2-print-content
step s1-begin: 
    BEGIN;

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);

nodename       nodeport       isactive       

localhost      57638          t              
step s2-copy-to-reference-table: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-copy-to-reference-table: <... completed>
step s2-print-content: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              5              
57638          t              5              

starting permutation: s2-begin s2-copy-to-reference-table s1-add-second-worker s2-commit s2-print-content
step s2-begin: 
	BEGIN;

step s2-copy-to-reference-table: 
	COPY test_reference_table FROM PROGRAM 'echo 1 && echo 2 && echo 3 && echo 4 && echo 5';

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-add-second-worker: <... completed>
nodename       nodeport       isactive       

localhost      57638          t              
step s2-print-content: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              5              
57638          t              5              

starting permutation: s1-begin s1-add-second-worker s2-insert-to-reference-table s1-commit s2-print-content
step s1-begin: 
    BEGIN;

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);

nodename       nodeport       isactive       

localhost      57638          t              
step s2-insert-to-reference-table: 
	INSERT INTO test_reference_table VALUES (6);
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-insert-to-reference-table: <... completed>
step s2-print-content: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              1              
57638          t              1              

starting permutation: s2-begin s2-insert-to-reference-table s1-add-second-worker s2-commit s2-print-content
step s2-begin: 
	BEGIN;

step s2-insert-to-reference-table: 
	INSERT INTO test_reference_table VALUES (6);

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-add-second-worker: <... completed>
nodename       nodeport       isactive       

localhost      57638          t              
step s2-print-content: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              1              
57638          t              1              

starting permutation: s1-begin s1-add-second-worker s2-ddl-on-reference-table s1-commit s2-print-index-count
step s1-begin: 
    BEGIN;

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);

nodename       nodeport       isactive       

localhost      57638          t              
step s2-ddl-on-reference-table: 
	CREATE INDEX reference_index ON test_reference_table(test_id);
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-ddl-on-reference-table: <... completed>
step s2-print-index-count: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from pg_indexes WHERE tablename = ''%s''')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              1              
57638          t              1              

starting permutation: s2-begin s2-ddl-on-reference-table s1-add-second-worker s2-commit s2-print-index-count
step s2-begin: 
	BEGIN;

step s2-ddl-on-reference-table: 
	CREATE INDEX reference_index ON test_reference_table(test_id);

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-add-second-worker: <... completed>
nodename       nodeport       isactive       

localhost      57638          t              
step s2-print-index-count: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from pg_indexes WHERE tablename = ''%s''')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              1              
57638          t              1              

starting permutation: s2-begin s1-add-second-worker s2-create-reference-table-2 s2-select-join-reference-table-2 s2-commit s2-print-content-2 s2-drop-reference-table-2
step s2-begin: 
	BEGIN;

step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);

nodename       nodeport       isactive       

localhost      57638          t              
step s2-create-reference-table-2: 
	CREATE TABLE test_reference_table_2 (test_id integer);
	SELECT create_reference_table('test_reference_table_2');

create_reference_table

               
step s2-select-join-reference-table-2: 
	CREATE TABLE test_table (x int, y int);
	SELECT create_distributed_table('test_table','x');
	SELECT * FROM test_table JOIN test_reference_table_2 ON test_id = x;
	DROP TABLE test_table;

create_distributed_table

               
ERROR:  cannot perform query with placements that were modified over multiple connections
step s2-commit: 
	COMMIT;

step s2-print-content-2: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              0              
57638          t              0              
step s2-drop-reference-table-2: 
	DROP TABLE test_reference_table_2;

ERROR:  table "test_reference_table_2" does not exist

starting permutation: s2-begin s2-create-reference-table-2 s1-add-second-worker s2-select-join-reference-table-2 s2-commit s2-print-content-2 s2-drop-reference-table-2
step s2-begin: 
	BEGIN;

step s2-create-reference-table-2: 
	CREATE TABLE test_reference_table_2 (test_id integer);
	SELECT create_reference_table('test_reference_table_2');

create_reference_table

               
step s1-add-second-worker: 
	SELECT nodename, nodeport, isactive FROM master_add_node('localhost', 57638);
 <waiting ...>
step s2-select-join-reference-table-2: 
	CREATE TABLE test_table (x int, y int);
	SELECT create_distributed_table('test_table','x');
	SELECT * FROM test_table JOIN test_reference_table_2 ON test_id = x;
	DROP TABLE test_table;

step s1-add-second-worker: <... completed>
nodename       nodeport       isactive       

localhost      57638          t              
error in steps s2-select-join-reference-table-2 s1-add-second-worker: ERROR:  replication_factor (2) exceeds number of worker nodes (1)
step s2-commit: 
	COMMIT;

step s2-print-content-2: 
	SELECT
		nodeport, success, result
	FROM
		run_command_on_placements('test_reference_table', 'select count(*) from %s')
	ORDER BY
		nodeport;

nodeport       success        result         

57637          t              0              
57638          t              0              
step s2-drop-reference-table-2: 
	DROP TABLE test_reference_table_2;

ERROR:  table "test_reference_table_2" does not exist
